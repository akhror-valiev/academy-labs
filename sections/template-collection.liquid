{{ 'template-collection.css' | asset_url | stylesheet_tag }}
<div>
  {% render 'banner-image' %}
</div> <!-- Close the div for banner image -->

<div class="collection-container" id="collectionContainer">

  {% paginate collection.products by section.settings.products_per_row %}
  <div class="collection-wrapper">
    {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
    <div class="collection-sort" x-data="{
      loading: false,
      sort: '{{ sort_by }}',
      sortCollection(){
        this.loading = true;
        fetch('/collections/{{ collection.handle }}?sort_by=' + this.sort)
          .then(response => response.text())
          .then(data => {
            let html_div = document.createElement('div');
            html_div.innerHTML = data;
            let html_dom = html_div.querySelector('#collectionContainer').innerHTML;
            document.querySelector('#collectionContainer').innerHTML = html_dom;
            {% comment %} update url without refreshing the page {% endcomment %}
            history.replaceState(null, null, '?sort_by=' + this.sort);
          })
          .catch(error => console.error('Error', error))
          .finally(()=>this.loading = false);
      }
    }">
    {% render 'icon-loader' %}
    {% render 'icon-filter' %}
      <select id="sort-by" x-model="sort" @change="sortCollection()" class="filter-product">
      {% for option in collection.sort_options %}
        <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
          {{ option.name }}
        </option>
      {% endfor %}
    </select>
    </div>
    <div class="products">
      {% for product in collection.products %}
        {% render 'product-card', product:product %}
      {% endfor %}
    </div>
  </div>
  {% render 'pagination', pagination:paginate %}
  {% endpaginate %}
</div>




{% schema %}
{
  "name": "Collection Product Grid",
  "settings": [
    {
      "type": "range",
      "id": "products_per_row",
      "min": 4,
      "max": 12,
      "step": 1,
      "default": 8,
      "label": "Products per Row"

      
    }
  ]
}
{% endschema %}


