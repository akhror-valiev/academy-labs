<div class="product-card">
    {% if product.featured_image %}
        <div class="product-image-container">
            <a href="#" class="productInfoAnchor" product-handle="{{ product.handle }}" product-price="{{ product.price | money }}">
                <img src="{{ product.featured_image.src | img_url: 'medium' }}" alt="{{ product.title }}" class="product-image-modal-trigger" width="100" height="200">
            </a> 
        </div>
    {% else %}
        {{ 'product-1' | placeholder_svg_tag }}
    {% endif %}
    <div class="product-details">
        <p class="p-brand">{{ product.vendor }}</p>
        <p class="p-models">{{ product.title }}</p>
        <p class="p-price">{{ product.price | money }}</p>
        <a href="{{ product.url }}" class="view-btns">View Product</a>
        <div class="product-form">
            <form method="post" action="/cart/add">
                <label for="variant-select-{{ product.id }}">Select Variant:</label>
                <select id="variant-select-{{ product.id }}" name="id">
                    {% for variant in product.variants %}
                        <option value="{{ variant.id }}">{{ variant.title }}</option>
                    {% endfor %}
                </select>
                <button type="submit" class="add-to-cart-btn">Add to Cart</button>
            </form>
        </div>
    </div>
</div>





<script>
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('.product-form form');

    forms.forEach(form => {
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(form);

            fetch('/cart/add.js', {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                console.log('Product added to cart:', data);

            })
            .catch(error => {
                console.error('Error adding product to cart:', error);
            });
        });
    });
});
</script>

<style>

.product-card {
    position: relative;
    overflow: hidden;
    transition: all 0.6s ease;
}

.product-details {
    position: relative;
}

.view-btns {
    display: block;
    margin: 10px 0;
    cursor: pointer;
    z-index: 1; 
    position: relative;
}

.product-form {
    display: none;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: white;
    padding: 10px;
    z-index: 0;
}    

.product-card:hover .product-form,
.product-card:hover .view-btns {
    display: block;
    margin: 30px;
}

.add-to-cart-btn {
    padding: 5px 10px;
    margin-top: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #000;
    color: white;
}
    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.8);
        justify-content: center; /* Center horizontally */
        align-items: center; /* Center vertically */
    }
    .modal-content {
        margin: 30px auto 0; /* Adjust margin-top as needed */
        display: block;
        width: 50%; /* Adjust as needed */
        height: 70%; /* Adjust as needed */
    }
    .close {
        color: #FFF;
        position: absolute;
        top: 10px;
        right: 25px;
        font-size: 35px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }
    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }
    /* Zoom Effect */
    .product-image-container {
        overflow: hidden;
        position: relative;
    }
    .product-image-modal-trigger {
        transition: transform 0.3s ease;
        width: 250px;
    }
    .product-image-modal-trigger:hover {
        transform: scale(1.1);
    }

    .view-btns {
    display: inline-block;
    padding: 10px 20px;
    background-color: #000000;
    color: #fff;
    text-decoration: none;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
}

.view-button:hover {
    background-color: gray;
}

.p-brand {
color: var(--dark-gray-color);
}
.p-models {
    font-weight: bold;
}

.p-price {
color: var(--red-color);
font-weight: 700;
}
.productInfoAnchor img {
    object-fit:cover;
    width: 220px;
}
</style>
